package Mapas

import(
	"fmt"
    "strconv"
) 

func Command_type_map(Code string) {
    command_type:= map[string]string{
        "A10": "Real-Time Location Query",
        "A11": "Setting a Heartbeat Packet Reporting Interval",
        "A12": "Tracking by Time Interval",
        "A13": "Setting the Cornering Report",
        "A14": "Tracking by Distance",
        "A15": "Setting the Parking Scheduled Tracking Function",
        "A16": "Enabling the Parking Scheduled Tracking Function",
        "A17": "Controlling Output 1 Status by RFID/iButton",
        "A21": "Setting GPRS Parameters",
        "A22": "Setting the DNS Server IP Address",
        "A23": "Setting the Standby GPRS Server",
        "A70": "Reading All Authorized Phone Numbers",
        "A71": "Setting Authorized Phone Numbers",
        "A72": "Setting Listen-in Phone Numbers",
        "A73": "Setting the Smart Sleep Mode",
        "AAA": "Automatic Event Report",
        "AFF": "Deleting a GPRS Event in the Buffer",
        "B05": "Setting a Geo-Fence",
        "B06": "Deleting a Geo-Fence",
        "B07": "Setting the Speeding Alert",
        "B08": "Setting the Towing Alert",
        "B09": "Setting the Vibration Sensitivity Level",
        "B10": "Fast Setting the Towing Alert",
        "B11": "Setting a Polygonal Geo-Fence",
        "B14": "Setting the Idling Alert",
        "B15": "Setting Driver Fatigue Parameters",
        "B21": "Setting the Anti-Theft Function",
        "B34": "Setting a Log Interval",
        "B35": "Setting the SMS Time Zone",
        "B36": "Setting the GPRS Time Zone",
        "B37": "Setting the Auto Sleep Function",
        "B38": "Setting the Auto Sleep Voltage",
        "B60": "Determining Vehicle Status by ACC Status",
        "B72": "Setting the Fuel Filtering Function",
        "B99": "Setting Event Authorization",
        "C01": "Controlling Output Status",
        "C02": "Notifying the Tracker of Sending an SMS",
        "C03": "Setting a GPRS Event Transmission Mode",
        "C40": "Registering a Temperature Sensor Number",
        "C41": "Deleting a Registered Temperature Sensor",
        "C42": "Reading the Temperature Sensor SN and Number",
        "C43": "Setting the Temperature Threshold and Logical Name",
        "C44": "Reading Temperature Sensor Parameters",
        "C46": "Checking Temperature Sensor Parameters",
        "C47": "Setting Fuel Parameters",
        "C48": "Reading Fuel Parameters",
        "C61": "Transparently Transmitting Data over the Serial Port",
        "C70": "Setting a Serial Port and a Peripheral",
        "C85": "Setting the GSM Jamming Detection Function",
        "D00": "Obtaining a Picture",
        "D01": "Obtaining the Picture List",
        "D02": "Deleting a Picture",
        "D03": "Taking Photos on Demand",
        "D10": "Authorizing an iButton Key/RFID Card",
        "D11": "Authorizing iButton Keys/RFID Cards in Batches",
        "D12": "Checking iButton/RFID Authorization",
        "D13": "Reading an Authorized iButton Key",
        "D14": "Deleting an Authorized iButton Key",
        "D15": "Deleting Authorized iButton Keys in Batches",
        "D16": "Checking the Checksum of the Authorized iButton ID Database",
        "D79": "Setting Harsh Acceleration and Harsh Braking Parameters",
        "D80": "Setting Harsh Cornering Parameters",
        "E91": "Reading Device's Firmware Version and SN",
        "F00": "Restarting the GSM and GPS Modules",
        "F01": "Restarting the GSM Module",
        "F02": "Restarting the GPS Module",
        "F08": "Setting the Mileage and Run Time",
        "F09": "Deleting SMS/GPRS Cache Data",
        "F11": "Restoring Initial Settings",
}
    fmt.Println(command_type[Code])  
    //return command_type[Code] 
}


